package Paws::MediaPackageVod::Types;
  use Type::Library qw/-base/;
  use Type::Utils qw/class_type/;

  class_type MediaPackageVod_Asset, { class => 'Paws::MediaPackageVod::Asset' };
  class_type MediaPackageVod_AssetCreateParameters, { class => 'Paws::MediaPackageVod::AssetCreateParameters' };
  class_type MediaPackageVod_AssetList, { class => 'Paws::MediaPackageVod::AssetList' };
  class_type MediaPackageVod_AssetShallow, { class => 'Paws::MediaPackageVod::AssetShallow' };
  class_type MediaPackageVod_CmafEncryption, { class => 'Paws::MediaPackageVod::CmafEncryption' };
  class_type MediaPackageVod_CmafPackage, { class => 'Paws::MediaPackageVod::CmafPackage' };
  class_type MediaPackageVod_CreateAssetRequest, { class => 'Paws::MediaPackageVod::CreateAssetRequest' };
  class_type MediaPackageVod_CreateAssetResponse, { class => 'Paws::MediaPackageVod::CreateAssetResponse' };
  class_type MediaPackageVod_CreatePackagingConfigurationRequest, { class => 'Paws::MediaPackageVod::CreatePackagingConfigurationRequest' };
  class_type MediaPackageVod_CreatePackagingConfigurationResponse, { class => 'Paws::MediaPackageVod::CreatePackagingConfigurationResponse' };
  class_type MediaPackageVod_CreatePackagingGroupRequest, { class => 'Paws::MediaPackageVod::CreatePackagingGroupRequest' };
  class_type MediaPackageVod_CreatePackagingGroupResponse, { class => 'Paws::MediaPackageVod::CreatePackagingGroupResponse' };
  class_type MediaPackageVod_DashEncryption, { class => 'Paws::MediaPackageVod::DashEncryption' };
  class_type MediaPackageVod_DashManifest, { class => 'Paws::MediaPackageVod::DashManifest' };
  class_type MediaPackageVod_DashPackage, { class => 'Paws::MediaPackageVod::DashPackage' };
  class_type MediaPackageVod_DeleteAssetRequest, { class => 'Paws::MediaPackageVod::DeleteAssetRequest' };
  class_type MediaPackageVod_DeleteAssetResponse, { class => 'Paws::MediaPackageVod::DeleteAssetResponse' };
  class_type MediaPackageVod_DeletePackagingConfigurationRequest, { class => 'Paws::MediaPackageVod::DeletePackagingConfigurationRequest' };
  class_type MediaPackageVod_DeletePackagingConfigurationResponse, { class => 'Paws::MediaPackageVod::DeletePackagingConfigurationResponse' };
  class_type MediaPackageVod_DeletePackagingGroupRequest, { class => 'Paws::MediaPackageVod::DeletePackagingGroupRequest' };
  class_type MediaPackageVod_DeletePackagingGroupResponse, { class => 'Paws::MediaPackageVod::DeletePackagingGroupResponse' };
  class_type MediaPackageVod_DescribeAssetRequest, { class => 'Paws::MediaPackageVod::DescribeAssetRequest' };
  class_type MediaPackageVod_DescribeAssetResponse, { class => 'Paws::MediaPackageVod::DescribeAssetResponse' };
  class_type MediaPackageVod_DescribePackagingConfigurationRequest, { class => 'Paws::MediaPackageVod::DescribePackagingConfigurationRequest' };
  class_type MediaPackageVod_DescribePackagingConfigurationResponse, { class => 'Paws::MediaPackageVod::DescribePackagingConfigurationResponse' };
  class_type MediaPackageVod_DescribePackagingGroupRequest, { class => 'Paws::MediaPackageVod::DescribePackagingGroupRequest' };
  class_type MediaPackageVod_DescribePackagingGroupResponse, { class => 'Paws::MediaPackageVod::DescribePackagingGroupResponse' };
  class_type MediaPackageVod_EgressEndpoint, { class => 'Paws::MediaPackageVod::EgressEndpoint' };
  class_type MediaPackageVod_ForbiddenException, { class => 'Paws::MediaPackageVod::ForbiddenException' };
  class_type MediaPackageVod_HlsEncryption, { class => 'Paws::MediaPackageVod::HlsEncryption' };
  class_type MediaPackageVod_HlsManifest, { class => 'Paws::MediaPackageVod::HlsManifest' };
  class_type MediaPackageVod_HlsPackage, { class => 'Paws::MediaPackageVod::HlsPackage' };
  class_type MediaPackageVod_InternalServerErrorException, { class => 'Paws::MediaPackageVod::InternalServerErrorException' };
  class_type MediaPackageVod_ListAssetsRequest, { class => 'Paws::MediaPackageVod::ListAssetsRequest' };
  class_type MediaPackageVod_ListAssetsResponse, { class => 'Paws::MediaPackageVod::ListAssetsResponse' };
  class_type MediaPackageVod_ListPackagingConfigurationsRequest, { class => 'Paws::MediaPackageVod::ListPackagingConfigurationsRequest' };
  class_type MediaPackageVod_ListPackagingConfigurationsResponse, { class => 'Paws::MediaPackageVod::ListPackagingConfigurationsResponse' };
  class_type MediaPackageVod_ListPackagingGroupsRequest, { class => 'Paws::MediaPackageVod::ListPackagingGroupsRequest' };
  class_type MediaPackageVod_ListPackagingGroupsResponse, { class => 'Paws::MediaPackageVod::ListPackagingGroupsResponse' };
  class_type MediaPackageVod_MssEncryption, { class => 'Paws::MediaPackageVod::MssEncryption' };
  class_type MediaPackageVod_MssManifest, { class => 'Paws::MediaPackageVod::MssManifest' };
  class_type MediaPackageVod_MssPackage, { class => 'Paws::MediaPackageVod::MssPackage' };
  class_type MediaPackageVod_NotFoundException, { class => 'Paws::MediaPackageVod::NotFoundException' };
  class_type MediaPackageVod_PackagingConfiguration, { class => 'Paws::MediaPackageVod::PackagingConfiguration' };
  class_type MediaPackageVod_PackagingConfigurationCreateParameters, { class => 'Paws::MediaPackageVod::PackagingConfigurationCreateParameters' };
  class_type MediaPackageVod_PackagingConfigurationList, { class => 'Paws::MediaPackageVod::PackagingConfigurationList' };
  class_type MediaPackageVod_PackagingGroup, { class => 'Paws::MediaPackageVod::PackagingGroup' };
  class_type MediaPackageVod_PackagingGroupCreateParameters, { class => 'Paws::MediaPackageVod::PackagingGroupCreateParameters' };
  class_type MediaPackageVod_PackagingGroupList, { class => 'Paws::MediaPackageVod::PackagingGroupList' };
  class_type MediaPackageVod_ServiceUnavailableException, { class => 'Paws::MediaPackageVod::ServiceUnavailableException' };
  class_type MediaPackageVod_SpekeKeyProvider, { class => 'Paws::MediaPackageVod::SpekeKeyProvider' };
  class_type MediaPackageVod_StreamSelection, { class => 'Paws::MediaPackageVod::StreamSelection' };
  class_type MediaPackageVod_TooManyRequestsException, { class => 'Paws::MediaPackageVod::TooManyRequestsException' };
  class_type MediaPackageVod_UnprocessableEntityException, { class => 'Paws::MediaPackageVod::UnprocessableEntityException' };

1;
