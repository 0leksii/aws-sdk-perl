package Paws::MediaPackage::Types;
  use Type::Library qw/-base/;
  use Type::Utils qw/class_type/;

  class_type MediaPackage___mapOf__string, { class => 'Paws::MediaPackage::__mapOf__string' };
  class_type MediaPackage_Channel, { class => 'Paws::MediaPackage::Channel' };
  class_type MediaPackage_ChannelCreateParameters, { class => 'Paws::MediaPackage::ChannelCreateParameters' };
  class_type MediaPackage_ChannelList, { class => 'Paws::MediaPackage::ChannelList' };
  class_type MediaPackage_ChannelUpdateParameters, { class => 'Paws::MediaPackage::ChannelUpdateParameters' };
  class_type MediaPackage_CmafEncryption, { class => 'Paws::MediaPackage::CmafEncryption' };
  class_type MediaPackage_CmafPackage, { class => 'Paws::MediaPackage::CmafPackage' };
  class_type MediaPackage_CmafPackageCreateOrUpdateParameters, { class => 'Paws::MediaPackage::CmafPackageCreateOrUpdateParameters' };
  class_type MediaPackage_CreateChannelRequest, { class => 'Paws::MediaPackage::CreateChannelRequest' };
  class_type MediaPackage_CreateChannelResponse, { class => 'Paws::MediaPackage::CreateChannelResponse' };
  class_type MediaPackage_CreateOriginEndpointRequest, { class => 'Paws::MediaPackage::CreateOriginEndpointRequest' };
  class_type MediaPackage_CreateOriginEndpointResponse, { class => 'Paws::MediaPackage::CreateOriginEndpointResponse' };
  class_type MediaPackage_DashEncryption, { class => 'Paws::MediaPackage::DashEncryption' };
  class_type MediaPackage_DashPackage, { class => 'Paws::MediaPackage::DashPackage' };
  class_type MediaPackage_DeleteChannelRequest, { class => 'Paws::MediaPackage::DeleteChannelRequest' };
  class_type MediaPackage_DeleteChannelResponse, { class => 'Paws::MediaPackage::DeleteChannelResponse' };
  class_type MediaPackage_DeleteOriginEndpointRequest, { class => 'Paws::MediaPackage::DeleteOriginEndpointRequest' };
  class_type MediaPackage_DeleteOriginEndpointResponse, { class => 'Paws::MediaPackage::DeleteOriginEndpointResponse' };
  class_type MediaPackage_DescribeChannelRequest, { class => 'Paws::MediaPackage::DescribeChannelRequest' };
  class_type MediaPackage_DescribeChannelResponse, { class => 'Paws::MediaPackage::DescribeChannelResponse' };
  class_type MediaPackage_DescribeOriginEndpointRequest, { class => 'Paws::MediaPackage::DescribeOriginEndpointRequest' };
  class_type MediaPackage_DescribeOriginEndpointResponse, { class => 'Paws::MediaPackage::DescribeOriginEndpointResponse' };
  class_type MediaPackage_ForbiddenException, { class => 'Paws::MediaPackage::ForbiddenException' };
  class_type MediaPackage_HlsEncryption, { class => 'Paws::MediaPackage::HlsEncryption' };
  class_type MediaPackage_HlsIngest, { class => 'Paws::MediaPackage::HlsIngest' };
  class_type MediaPackage_HlsManifest, { class => 'Paws::MediaPackage::HlsManifest' };
  class_type MediaPackage_HlsManifestCreateOrUpdateParameters, { class => 'Paws::MediaPackage::HlsManifestCreateOrUpdateParameters' };
  class_type MediaPackage_HlsPackage, { class => 'Paws::MediaPackage::HlsPackage' };
  class_type MediaPackage_IngestEndpoint, { class => 'Paws::MediaPackage::IngestEndpoint' };
  class_type MediaPackage_InternalServerErrorException, { class => 'Paws::MediaPackage::InternalServerErrorException' };
  class_type MediaPackage_ListChannelsRequest, { class => 'Paws::MediaPackage::ListChannelsRequest' };
  class_type MediaPackage_ListChannelsResponse, { class => 'Paws::MediaPackage::ListChannelsResponse' };
  class_type MediaPackage_ListOriginEndpointsRequest, { class => 'Paws::MediaPackage::ListOriginEndpointsRequest' };
  class_type MediaPackage_ListOriginEndpointsResponse, { class => 'Paws::MediaPackage::ListOriginEndpointsResponse' };
  class_type MediaPackage_ListTagsForResourceRequest, { class => 'Paws::MediaPackage::ListTagsForResourceRequest' };
  class_type MediaPackage_ListTagsForResourceResponse, { class => 'Paws::MediaPackage::ListTagsForResourceResponse' };
  class_type MediaPackage_MssEncryption, { class => 'Paws::MediaPackage::MssEncryption' };
  class_type MediaPackage_MssPackage, { class => 'Paws::MediaPackage::MssPackage' };
  class_type MediaPackage_NotFoundException, { class => 'Paws::MediaPackage::NotFoundException' };
  class_type MediaPackage_OriginEndpoint, { class => 'Paws::MediaPackage::OriginEndpoint' };
  class_type MediaPackage_OriginEndpointCreateParameters, { class => 'Paws::MediaPackage::OriginEndpointCreateParameters' };
  class_type MediaPackage_OriginEndpointList, { class => 'Paws::MediaPackage::OriginEndpointList' };
  class_type MediaPackage_OriginEndpointUpdateParameters, { class => 'Paws::MediaPackage::OriginEndpointUpdateParameters' };
  class_type MediaPackage_RotateChannelCredentialsRequest, { class => 'Paws::MediaPackage::RotateChannelCredentialsRequest' };
  class_type MediaPackage_RotateChannelCredentialsResponse, { class => 'Paws::MediaPackage::RotateChannelCredentialsResponse' };
  class_type MediaPackage_RotateIngestEndpointCredentialsRequest, { class => 'Paws::MediaPackage::RotateIngestEndpointCredentialsRequest' };
  class_type MediaPackage_RotateIngestEndpointCredentialsResponse, { class => 'Paws::MediaPackage::RotateIngestEndpointCredentialsResponse' };
  class_type MediaPackage_ServiceUnavailableException, { class => 'Paws::MediaPackage::ServiceUnavailableException' };
  class_type MediaPackage_SpekeKeyProvider, { class => 'Paws::MediaPackage::SpekeKeyProvider' };
  class_type MediaPackage_StreamSelection, { class => 'Paws::MediaPackage::StreamSelection' };
  class_type MediaPackage_TagResourceRequest, { class => 'Paws::MediaPackage::TagResourceRequest' };
  class_type MediaPackage_Tags, { class => 'Paws::MediaPackage::Tags' };
  class_type MediaPackage_TagsModel, { class => 'Paws::MediaPackage::TagsModel' };
  class_type MediaPackage_TooManyRequestsException, { class => 'Paws::MediaPackage::TooManyRequestsException' };
  class_type MediaPackage_UnprocessableEntityException, { class => 'Paws::MediaPackage::UnprocessableEntityException' };
  class_type MediaPackage_UntagResourceRequest, { class => 'Paws::MediaPackage::UntagResourceRequest' };
  class_type MediaPackage_UpdateChannelRequest, { class => 'Paws::MediaPackage::UpdateChannelRequest' };
  class_type MediaPackage_UpdateChannelResponse, { class => 'Paws::MediaPackage::UpdateChannelResponse' };
  class_type MediaPackage_UpdateOriginEndpointRequest, { class => 'Paws::MediaPackage::UpdateOriginEndpointRequest' };
  class_type MediaPackage_UpdateOriginEndpointResponse, { class => 'Paws::MediaPackage::UpdateOriginEndpointResponse' };

1;
