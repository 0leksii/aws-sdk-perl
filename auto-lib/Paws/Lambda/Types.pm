package Paws::Lambda::Types;
  use Type::Library qw/-base/;
  use Type::Utils qw/class_type/;

  class_type Lambda_AccountLimit, { class => 'Paws::Lambda::AccountLimit' };
  class_type Lambda_AccountUsage, { class => 'Paws::Lambda::AccountUsage' };
  class_type Lambda_AdditionalVersionWeights, { class => 'Paws::Lambda::AdditionalVersionWeights' };
  class_type Lambda_AddLayerVersionPermissionRequest, { class => 'Paws::Lambda::AddLayerVersionPermissionRequest' };
  class_type Lambda_AddLayerVersionPermissionResponse, { class => 'Paws::Lambda::AddLayerVersionPermissionResponse' };
  class_type Lambda_AddPermissionRequest, { class => 'Paws::Lambda::AddPermissionRequest' };
  class_type Lambda_AddPermissionResponse, { class => 'Paws::Lambda::AddPermissionResponse' };
  class_type Lambda_AliasConfiguration, { class => 'Paws::Lambda::AliasConfiguration' };
  class_type Lambda_AliasRoutingConfiguration, { class => 'Paws::Lambda::AliasRoutingConfiguration' };
  class_type Lambda_CodeStorageExceededException, { class => 'Paws::Lambda::CodeStorageExceededException' };
  class_type Lambda_Concurrency, { class => 'Paws::Lambda::Concurrency' };
  class_type Lambda_CreateAliasRequest, { class => 'Paws::Lambda::CreateAliasRequest' };
  class_type Lambda_CreateEventSourceMappingRequest, { class => 'Paws::Lambda::CreateEventSourceMappingRequest' };
  class_type Lambda_CreateFunctionRequest, { class => 'Paws::Lambda::CreateFunctionRequest' };
  class_type Lambda_DeadLetterConfig, { class => 'Paws::Lambda::DeadLetterConfig' };
  class_type Lambda_DeleteAliasRequest, { class => 'Paws::Lambda::DeleteAliasRequest' };
  class_type Lambda_DeleteEventSourceMappingRequest, { class => 'Paws::Lambda::DeleteEventSourceMappingRequest' };
  class_type Lambda_DeleteFunctionConcurrencyRequest, { class => 'Paws::Lambda::DeleteFunctionConcurrencyRequest' };
  class_type Lambda_DeleteFunctionRequest, { class => 'Paws::Lambda::DeleteFunctionRequest' };
  class_type Lambda_DeleteLayerVersionRequest, { class => 'Paws::Lambda::DeleteLayerVersionRequest' };
  class_type Lambda_EC2AccessDeniedException, { class => 'Paws::Lambda::EC2AccessDeniedException' };
  class_type Lambda_EC2ThrottledException, { class => 'Paws::Lambda::EC2ThrottledException' };
  class_type Lambda_EC2UnexpectedException, { class => 'Paws::Lambda::EC2UnexpectedException' };
  class_type Lambda_ENILimitReachedException, { class => 'Paws::Lambda::ENILimitReachedException' };
  class_type Lambda_Environment, { class => 'Paws::Lambda::Environment' };
  class_type Lambda_EnvironmentError, { class => 'Paws::Lambda::EnvironmentError' };
  class_type Lambda_EnvironmentResponse, { class => 'Paws::Lambda::EnvironmentResponse' };
  class_type Lambda_EnvironmentVariables, { class => 'Paws::Lambda::EnvironmentVariables' };
  class_type Lambda_EventSourceMappingConfiguration, { class => 'Paws::Lambda::EventSourceMappingConfiguration' };
  class_type Lambda_FunctionCode, { class => 'Paws::Lambda::FunctionCode' };
  class_type Lambda_FunctionCodeLocation, { class => 'Paws::Lambda::FunctionCodeLocation' };
  class_type Lambda_FunctionConfiguration, { class => 'Paws::Lambda::FunctionConfiguration' };
  class_type Lambda_GetAccountSettingsRequest, { class => 'Paws::Lambda::GetAccountSettingsRequest' };
  class_type Lambda_GetAccountSettingsResponse, { class => 'Paws::Lambda::GetAccountSettingsResponse' };
  class_type Lambda_GetAliasRequest, { class => 'Paws::Lambda::GetAliasRequest' };
  class_type Lambda_GetEventSourceMappingRequest, { class => 'Paws::Lambda::GetEventSourceMappingRequest' };
  class_type Lambda_GetFunctionConfigurationRequest, { class => 'Paws::Lambda::GetFunctionConfigurationRequest' };
  class_type Lambda_GetFunctionRequest, { class => 'Paws::Lambda::GetFunctionRequest' };
  class_type Lambda_GetFunctionResponse, { class => 'Paws::Lambda::GetFunctionResponse' };
  class_type Lambda_GetLayerVersionByArnRequest, { class => 'Paws::Lambda::GetLayerVersionByArnRequest' };
  class_type Lambda_GetLayerVersionPolicyRequest, { class => 'Paws::Lambda::GetLayerVersionPolicyRequest' };
  class_type Lambda_GetLayerVersionPolicyResponse, { class => 'Paws::Lambda::GetLayerVersionPolicyResponse' };
  class_type Lambda_GetLayerVersionRequest, { class => 'Paws::Lambda::GetLayerVersionRequest' };
  class_type Lambda_GetLayerVersionResponse, { class => 'Paws::Lambda::GetLayerVersionResponse' };
  class_type Lambda_GetPolicyRequest, { class => 'Paws::Lambda::GetPolicyRequest' };
  class_type Lambda_GetPolicyResponse, { class => 'Paws::Lambda::GetPolicyResponse' };
  class_type Lambda_InvalidParameterValueException, { class => 'Paws::Lambda::InvalidParameterValueException' };
  class_type Lambda_InvalidRequestContentException, { class => 'Paws::Lambda::InvalidRequestContentException' };
  class_type Lambda_InvalidRuntimeException, { class => 'Paws::Lambda::InvalidRuntimeException' };
  class_type Lambda_InvalidSecurityGroupIDException, { class => 'Paws::Lambda::InvalidSecurityGroupIDException' };
  class_type Lambda_InvalidSubnetIDException, { class => 'Paws::Lambda::InvalidSubnetIDException' };
  class_type Lambda_InvalidZipFileException, { class => 'Paws::Lambda::InvalidZipFileException' };
  class_type Lambda_InvocationRequest, { class => 'Paws::Lambda::InvocationRequest' };
  class_type Lambda_InvocationResponse, { class => 'Paws::Lambda::InvocationResponse' };
  class_type Lambda_InvokeAsyncRequest, { class => 'Paws::Lambda::InvokeAsyncRequest' };
  class_type Lambda_InvokeAsyncResponse, { class => 'Paws::Lambda::InvokeAsyncResponse' };
  class_type Lambda_KMSAccessDeniedException, { class => 'Paws::Lambda::KMSAccessDeniedException' };
  class_type Lambda_KMSDisabledException, { class => 'Paws::Lambda::KMSDisabledException' };
  class_type Lambda_KMSInvalidStateException, { class => 'Paws::Lambda::KMSInvalidStateException' };
  class_type Lambda_KMSNotFoundException, { class => 'Paws::Lambda::KMSNotFoundException' };
  class_type Lambda_Layer, { class => 'Paws::Lambda::Layer' };
  class_type Lambda_LayersListItem, { class => 'Paws::Lambda::LayersListItem' };
  class_type Lambda_LayerVersionContentInput, { class => 'Paws::Lambda::LayerVersionContentInput' };
  class_type Lambda_LayerVersionContentOutput, { class => 'Paws::Lambda::LayerVersionContentOutput' };
  class_type Lambda_LayerVersionsListItem, { class => 'Paws::Lambda::LayerVersionsListItem' };
  class_type Lambda_ListAliasesRequest, { class => 'Paws::Lambda::ListAliasesRequest' };
  class_type Lambda_ListAliasesResponse, { class => 'Paws::Lambda::ListAliasesResponse' };
  class_type Lambda_ListEventSourceMappingsRequest, { class => 'Paws::Lambda::ListEventSourceMappingsRequest' };
  class_type Lambda_ListEventSourceMappingsResponse, { class => 'Paws::Lambda::ListEventSourceMappingsResponse' };
  class_type Lambda_ListFunctionsRequest, { class => 'Paws::Lambda::ListFunctionsRequest' };
  class_type Lambda_ListFunctionsResponse, { class => 'Paws::Lambda::ListFunctionsResponse' };
  class_type Lambda_ListLayersRequest, { class => 'Paws::Lambda::ListLayersRequest' };
  class_type Lambda_ListLayersResponse, { class => 'Paws::Lambda::ListLayersResponse' };
  class_type Lambda_ListLayerVersionsRequest, { class => 'Paws::Lambda::ListLayerVersionsRequest' };
  class_type Lambda_ListLayerVersionsResponse, { class => 'Paws::Lambda::ListLayerVersionsResponse' };
  class_type Lambda_ListTagsRequest, { class => 'Paws::Lambda::ListTagsRequest' };
  class_type Lambda_ListTagsResponse, { class => 'Paws::Lambda::ListTagsResponse' };
  class_type Lambda_ListVersionsByFunctionRequest, { class => 'Paws::Lambda::ListVersionsByFunctionRequest' };
  class_type Lambda_ListVersionsByFunctionResponse, { class => 'Paws::Lambda::ListVersionsByFunctionResponse' };
  class_type Lambda_PolicyLengthExceededException, { class => 'Paws::Lambda::PolicyLengthExceededException' };
  class_type Lambda_PreconditionFailedException, { class => 'Paws::Lambda::PreconditionFailedException' };
  class_type Lambda_PublishLayerVersionRequest, { class => 'Paws::Lambda::PublishLayerVersionRequest' };
  class_type Lambda_PublishLayerVersionResponse, { class => 'Paws::Lambda::PublishLayerVersionResponse' };
  class_type Lambda_PublishVersionRequest, { class => 'Paws::Lambda::PublishVersionRequest' };
  class_type Lambda_PutFunctionConcurrencyRequest, { class => 'Paws::Lambda::PutFunctionConcurrencyRequest' };
  class_type Lambda_RemoveLayerVersionPermissionRequest, { class => 'Paws::Lambda::RemoveLayerVersionPermissionRequest' };
  class_type Lambda_RemovePermissionRequest, { class => 'Paws::Lambda::RemovePermissionRequest' };
  class_type Lambda_RequestTooLargeException, { class => 'Paws::Lambda::RequestTooLargeException' };
  class_type Lambda_ResourceConflictException, { class => 'Paws::Lambda::ResourceConflictException' };
  class_type Lambda_ResourceInUseException, { class => 'Paws::Lambda::ResourceInUseException' };
  class_type Lambda_ResourceNotFoundException, { class => 'Paws::Lambda::ResourceNotFoundException' };
  class_type Lambda_ServiceException, { class => 'Paws::Lambda::ServiceException' };
  class_type Lambda_SubnetIPAddressLimitReachedException, { class => 'Paws::Lambda::SubnetIPAddressLimitReachedException' };
  class_type Lambda_TagResourceRequest, { class => 'Paws::Lambda::TagResourceRequest' };
  class_type Lambda_Tags, { class => 'Paws::Lambda::Tags' };
  class_type Lambda_TooManyRequestsException, { class => 'Paws::Lambda::TooManyRequestsException' };
  class_type Lambda_TracingConfig, { class => 'Paws::Lambda::TracingConfig' };
  class_type Lambda_TracingConfigResponse, { class => 'Paws::Lambda::TracingConfigResponse' };
  class_type Lambda_UnsupportedMediaTypeException, { class => 'Paws::Lambda::UnsupportedMediaTypeException' };
  class_type Lambda_UntagResourceRequest, { class => 'Paws::Lambda::UntagResourceRequest' };
  class_type Lambda_UpdateAliasRequest, { class => 'Paws::Lambda::UpdateAliasRequest' };
  class_type Lambda_UpdateEventSourceMappingRequest, { class => 'Paws::Lambda::UpdateEventSourceMappingRequest' };
  class_type Lambda_UpdateFunctionCodeRequest, { class => 'Paws::Lambda::UpdateFunctionCodeRequest' };
  class_type Lambda_UpdateFunctionConfigurationRequest, { class => 'Paws::Lambda::UpdateFunctionConfigurationRequest' };
  class_type Lambda_VpcConfig, { class => 'Paws::Lambda::VpcConfig' };
  class_type Lambda_VpcConfigResponse, { class => 'Paws::Lambda::VpcConfigResponse' };

1;
