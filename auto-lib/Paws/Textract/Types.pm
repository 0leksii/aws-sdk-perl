package Paws::Textract::Types;
  use Type::Library qw/-base/;
  use Type::Utils qw/class_type/;

  class_type Textract_AccessDeniedException, { class => 'Paws::Textract::AccessDeniedException' };
  class_type Textract_AnalyzeDocumentRequest, { class => 'Paws::Textract::AnalyzeDocumentRequest' };
  class_type Textract_AnalyzeDocumentResponse, { class => 'Paws::Textract::AnalyzeDocumentResponse' };
  class_type Textract_BadDocumentException, { class => 'Paws::Textract::BadDocumentException' };
  class_type Textract_Block, { class => 'Paws::Textract::Block' };
  class_type Textract_BoundingBox, { class => 'Paws::Textract::BoundingBox' };
  class_type Textract_DetectDocumentTextRequest, { class => 'Paws::Textract::DetectDocumentTextRequest' };
  class_type Textract_DetectDocumentTextResponse, { class => 'Paws::Textract::DetectDocumentTextResponse' };
  class_type Textract_Document, { class => 'Paws::Textract::Document' };
  class_type Textract_DocumentLocation, { class => 'Paws::Textract::DocumentLocation' };
  class_type Textract_DocumentMetadata, { class => 'Paws::Textract::DocumentMetadata' };
  class_type Textract_DocumentTooLargeException, { class => 'Paws::Textract::DocumentTooLargeException' };
  class_type Textract_Geometry, { class => 'Paws::Textract::Geometry' };
  class_type Textract_GetDocumentAnalysisRequest, { class => 'Paws::Textract::GetDocumentAnalysisRequest' };
  class_type Textract_GetDocumentAnalysisResponse, { class => 'Paws::Textract::GetDocumentAnalysisResponse' };
  class_type Textract_GetDocumentTextDetectionRequest, { class => 'Paws::Textract::GetDocumentTextDetectionRequest' };
  class_type Textract_GetDocumentTextDetectionResponse, { class => 'Paws::Textract::GetDocumentTextDetectionResponse' };
  class_type Textract_IdempotentParameterMismatchException, { class => 'Paws::Textract::IdempotentParameterMismatchException' };
  class_type Textract_InternalServerError, { class => 'Paws::Textract::InternalServerError' };
  class_type Textract_InvalidJobIdException, { class => 'Paws::Textract::InvalidJobIdException' };
  class_type Textract_InvalidParameterException, { class => 'Paws::Textract::InvalidParameterException' };
  class_type Textract_InvalidS3ObjectException, { class => 'Paws::Textract::InvalidS3ObjectException' };
  class_type Textract_LimitExceededException, { class => 'Paws::Textract::LimitExceededException' };
  class_type Textract_NotificationChannel, { class => 'Paws::Textract::NotificationChannel' };
  class_type Textract_Point, { class => 'Paws::Textract::Point' };
  class_type Textract_ProvisionedThroughputExceededException, { class => 'Paws::Textract::ProvisionedThroughputExceededException' };
  class_type Textract_Relationship, { class => 'Paws::Textract::Relationship' };
  class_type Textract_S3Object, { class => 'Paws::Textract::S3Object' };
  class_type Textract_StartDocumentAnalysisRequest, { class => 'Paws::Textract::StartDocumentAnalysisRequest' };
  class_type Textract_StartDocumentAnalysisResponse, { class => 'Paws::Textract::StartDocumentAnalysisResponse' };
  class_type Textract_StartDocumentTextDetectionRequest, { class => 'Paws::Textract::StartDocumentTextDetectionRequest' };
  class_type Textract_StartDocumentTextDetectionResponse, { class => 'Paws::Textract::StartDocumentTextDetectionResponse' };
  class_type Textract_ThrottlingException, { class => 'Paws::Textract::ThrottlingException' };
  class_type Textract_UnsupportedDocumentException, { class => 'Paws::Textract::UnsupportedDocumentException' };
  class_type Textract_Warning, { class => 'Paws::Textract::Warning' };

1;
