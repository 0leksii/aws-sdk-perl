### main pod documentation begin ###

=head1 NAME

[% c.api %] - Perl Interface to AWS [% c.api_struct.metadata.serviceFullName %]

=head1 SYNOPSIS

  use Paws;

  my $obj = Paws->service('[% c.service_name %]');
  my $res = $obj->Method(
    Arg1 => $val1,
    Arg2 => [ 'V1', 'V2' ],
    # if Arg3 is an object, the HashRef will be used as arguments to the constructor
    # of the arguments type
    Arg3 => { Att1 => 'Val1' },
    # if Arg4 is an array of objects, the HashRefs will be passed as arguments to
    # the constructor of the arguments type
    Arg4 => [ { Att1 => 'Val1'  }, { Att1 => 'Val2' } ],
  );

=head1 DESCRIPTION

[% c.doc_for_service() %]

For the AWS API documentation, see L<[% c.service_url %]>

=head1 METHODS
[% FOR op IN c.api_struct.operations.keys.sort %]
  [%- op_name = op %]
=head2 [% op_name %](
[%- out_shape = c.input_for_operation(op_name) %]
[%- req_list = out_shape.required.sort %]
[%- FOREACH out_name IN req_list.sort -%]
  [%- member = c.shape(out_shape.members.$out_name.shape) -%]
  [%- out_name %] => [% c.perl_type_to_pod(member.perl_type) %]
  [%- IF (NOT loop.last) %], [% END %]
[%- END %]
[%- opt_list = c.optional_params_in_shape(out_shape) %]
[%- IF (opt_list.size > 0) %]
[%- IF (req_list.size > 0) %], [% END %][
[%- FOREACH out_name IN opt_list.sort %]
  [%- member = c.shape(out_shape.members.$out_name.shape) -%]
  [%- out_name %] => [% c.perl_type_to_pod(member.perl_type) %]
  [%- IF (NOT loop.last) %], [% END %]
[%- END %]]
[%- END %])

Each argument is described in detail in: L<[% c.api %]::[% op_name %]>

Returns: [% out_shape = c.shapename_for_operation_output(op_name); IF (out_shape) %]a L<[% c.api %]::[% out_shape %]> instance[% ELSE %]nothing[% END %]

[% c.doc_for_method(op_name) %]

[% END %]

[% INCLUDE 'paginator_documentation.tt' %]

=head1 SEE ALSO

This service class forms part of L<Paws>

=head1 BUGS and CONTRIBUTIONS

The source code is located here: L<https://github.com/pplu/aws-sdk-perl>

Please report bugs to: L<https://github.com/pplu/aws-sdk-perl/issues>

=cut
