[%- operation = c.operation(op_name) %]
[%- shape = c.input_for_operation(op_name) %]
package [% c.api %]::[% op_name %];
  use Moose;
[% SET include_vars.stream_param = '' -%]
[% INCLUDE shape_attributes.tt source="callargs" -%]

  use MooseX::ClassAttribute;

  class_has _api_call => (isa => 'Str', is => 'ro', default => '[% op_name %]');
  class_has _api_uri  => (isa => 'Str', is => 'ro', default => '[% operation.http.requestUri %]');
  class_has _api_method  => (isa => 'Str', is => 'ro', default => '[% operation.http.method %]');
  class_has _returns => (isa => 'Str', is => 'ro', default => '
    [%- IF (operation.output.keys.size) -%]
      [%- c.api %]::[% c.shapename_for_operation_output(op_name) -%]
    [%- ELSE -%]Paws::API::Response[% END -%]');
  class_has _result_key => (isa => 'Str', is => 'ro');
  [% IF (include_vars.stream_param) %]class_has _stream_param => (is => 'ro', default => '[% c.to_payload_shape_name(include_vars.stream_param) %]');[% END %]
  [%- IF shape.locationName -%]class_has _top_level_element => (isa => 'Str', is => 'ro', default => '[% shape.locationName %]');[% END %]
  [% IF shape.xmlNamespace -%]class_has _xml_namespace => (isa => 'Str', is => 'ro', default => sub { { uri => '[% shape.xmlNamespace.uri %]', prefix => '[% shape.xmlNamespace.prefix %]' }; });[%- END %]  
1;

[% INCLUDE 'callclass_documentation.tt' %]
